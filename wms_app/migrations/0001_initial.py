# Generated by Django 5.2.5 on 2025-08-25 02:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='센터명')),
                ('address', models.CharField(max_length=255, verbose_name='주소')),
            ],
            options={
                'verbose_name': '센터',
                'verbose_name_plural': '센터',
            },
        ),
        migrations.CreateModel(
            name='Courier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='택배사명')),
                ('contact', models.CharField(blank=True, max_length=100, verbose_name='연락처')),
            ],
            options={
                'verbose_name': '택배사',
                'verbose_name_plural': '택배사',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='주문번호')),
                ('order_date', models.DateTimeField(verbose_name='주문일시')),
                ('recipient_name', models.CharField(blank=True, max_length=100, verbose_name='수취인명')),
                ('recipient_phone', models.CharField(blank=True, max_length=20, verbose_name='연락처')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='주소')),
                ('postcode', models.CharField(blank=True, max_length=10, verbose_name='우편번호')),
                ('order_status', models.CharField(choices=[('PENDING', '주문접수'), ('PROCESSING', '처리중'), ('SHIPPED', '출고완료'), ('DELIVERED', '배송완료'), ('CANCELED', '주문취소'), ('ERROR', '오류')], default='PENDING', max_length=20, verbose_name='주문 상태')),
                ('delivery_memo', models.TextField(blank=True, verbose_name='배송 메모')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
            options={
                'verbose_name': '주문',
                'verbose_name_plural': '주문',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='상품명')),
                ('barcode', models.CharField(max_length=100, unique=True, verbose_name='바코드')),
                ('width', models.FloatField(default=0, verbose_name='가로(cm)')),
                ('length', models.FloatField(default=0, verbose_name='세로(cm)')),
                ('height', models.FloatField(default=0, verbose_name='높이(cm)')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='재고 수량')),
            ],
            options={
                'verbose_name': '상품',
                'verbose_name_plural': '상품',
            },
        ),
        migrations.CreateModel(
            name='SalesChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='판매 채널명')),
            ],
            options={
                'verbose_name': '판매 채널',
                'verbose_name_plural': '판매 채널',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='수량')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='wms_app.order', verbose_name='주문')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wms_app.product', verbose_name='상품')),
            ],
            options={
                'verbose_name': '주문 상품',
                'verbose_name_plural': '주문 상품',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='channel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms_app.saleschannel', verbose_name='판매 채널'),
        ),
        migrations.CreateModel(
            name='Shipper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='화주사명')),
                ('contact', models.CharField(blank=True, max_length=100, verbose_name='담당자')),
                ('center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms_app.center', verbose_name='소속 센터')),
            ],
            options={
                'verbose_name': '화주사',
                'verbose_name_plural': '화주사',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='shipper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms_app.shipper', verbose_name='화주사'),
        ),
        migrations.AddField(
            model_name='order',
            name='shipper',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms_app.shipper', verbose_name='화주사'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('CENTER_ADMIN', '센터 관리자'), ('CENTER_MANAGER', '센터 매니저'), ('CENTER_MEMBER', '센터 구성원'), ('SHIPPER_ADMIN', '화주사 관리자'), ('SHIPPER_MANAGER', '화주사 매니저'), ('SHIPPER_MEMBER', '화주사 구성원'), ('UNASSIGNED', '미지정')], default='UNASSIGNED', max_length=20, verbose_name='사용자 역할')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='wms_app_user_groups', related_query_name='wms_app_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='wms_app_user_permissions', related_query_name='wms_app_user', to='auth.permission', verbose_name='user permissions')),
                ('center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms_app.center', verbose_name='소속 센터')),
                ('shipper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms_app.shipper', verbose_name='소속 화주사')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('IN', '입고'), ('OUT', '출고')], max_length=3, verbose_name='구분')),
                ('quantity', models.PositiveIntegerField(verbose_name='수량')),
                ('memo', models.TextField(blank=True, verbose_name='메모')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='일시')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms_app.product', verbose_name='상품')),
            ],
            options={
                'verbose_name': '재고 이동 기록',
                'verbose_name_plural': '재고 이동 기록',
            },
        ),
        migrations.AlterUniqueTogether(
            name='order',
            unique_together={('shipper', 'order_no')},
        ),
    ]
